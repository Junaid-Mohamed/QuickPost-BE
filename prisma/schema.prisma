// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(cuid())
  firstName       String
  lastName        String?
  email           String  @unique
  profileImageURL String?
  bio             String?
  //  for passowrd bsed login
  password        String?
  // stores the Google `sub` claim for OAuth users
  googleId        String?

  posts           Post[]
  bookmarkedPosts Post[] @relation("BookmarkedPosts")

  followers  Follows[] @relation("follower")
  followings Follows[] @relation("following")

  createAt DateTime @default(now())
  updateAt DateTime @updatedAt
}

model Follows {
  follower   User   @relation("follower", fields: [followerId], references: [id])
  followerId String

  following   User   @relation("following", fields: [followingId], references: [id])
  followingId String

  //  composite id
  @@id([followerId, followingId])
}

model Post {
  id       String  @id @default(cuid())
  content  String
  imageUrl String?
  resourceType String? // image or video
  likes    Int     @default(0)
  author   User    @relation(fields: [authorId], references: [id])
  authorId String

  bookmarkedBy User[]   @relation("BookmarkedPosts")
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}
